name: Lint and Test

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - 3.7
          - 3.8
          - 3.9
          - 3.10

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install `black` and `flake8`
      run: |
        pip install \
          black \
          flake8 \
          ;

    - name: Check formatting with `black`
      run: black --check .

    - name: Lint with `flake8`
      run: flake8 . --count --statistics

  docs-tests:
    name: Documentation Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install Vault (for doctests)
      run: |
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
        echo "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main" \
          | sudo tee /etc/apt/sources.list.d/hashicorp.list

        sudo apt update \
          -o Dir::Etc::sourceparts="-" \
          -o APT::Get::List-Cleanup="0" \
          -o Dir::Etc::sourcelist="sources.list.d/hashicorp.list"

        sudo apt install \
          vault-enterprise=1.7.2+ent \
          ;

        # We disble cap_ipc_lock here as its generally incompatabile with GitHub
        # Actions' runtime environments.
        sudo setcap cap_ipc_lock= /usr/bin/vault

    - name: Install doctest dependencies
      run: pip install -r docs/requirements.txt

    - name: Sphinx - doctest Build
      working-directory: ./docs
      run: make doctest

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - 3.7
          - 3.8
          - 3.9
          - 3.10

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python dependencies
      run: pip install -r requirements-dev.txt

    - name: pytest tests/unit_tests
      run: |
        pytest \
          --cov=hvac \
          --cov-report=xml \
          tests/unit_tests

    - name: Upload unit tests coverage artifacts
      uses: actions/upload-artifact@v2
      with:
        name: unit_tests-coverage.xml
        path: coverage.xml
        if-no-files-found: error

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - 3.8
        vault-version:
          - 1.4.7
          - 1.5.9
          - 1.6.5
          - 1.7.2
          - 1.7.3
          - 1.7.5
          - 1.7.7
          - 1.7.9
          - 1.8.0
          - 1.8.2
          - 1.8.4
          - 1.8.6
          - 1.8.8
          - 1.8.10
          - 1.9.0
          - 1.9.2
          - 1.9.4
          - 1.9.6
          - 1.10.1
          - 1.10.3

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python dependencies
      run: pip install -r requirements-dev.txt

    - name: Install Vault and Consul (for integration tests)
      run: |
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
        echo "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main" \
          | sudo tee /etc/apt/sources.list.d/hashicorp.list

        sudo apt update \
          -o Dir::Etc::sourceparts="-" \
          -o APT::Get::List-Cleanup="0" \
          -o Dir::Etc::sourcelist="sources.list.d/hashicorp.list"

        sudo apt install \
          consul \
          vault-enterprise=${{ matrix.vault-version }}+ent \
          ;

        # We disble cap_ipc_lock here as its generally incompatabile with GitHub
        # Actions' runtime environments.
        sudo setcap cap_ipc_lock= /usr/bin/vault

    - name: pytest tests/integration_tests
      run: |
        pytest \
          --cov=hvac \
          --cov-report=xml \
          tests/integration_tests

    - name: Upload integration tests coverage artifacts
      uses: actions/upload-artifact@v2
      with:
        name: integration_tests-coverage.xml
        path: coverage.xml
        if-no-files-found: error

  upload-to-codecov:
    name: Upload to Codecov
    runs-on: ubuntu-latest
    needs:
      - unit-tests
      - integration-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Upload to Codecov
        uses: codecov/codecov-action@v1
